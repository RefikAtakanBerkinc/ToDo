@using Microsoft.AspNetCore.Components.Authorization
@using ToDo.Services
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject CustomAuthStateProvider AuthStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ToDo</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Ana Sayfa
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="todo">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Görev Listesi
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="completed-todos">
                        <span class="oi oi-check" aria-hidden="true"></span> Tamamlanan Görevler
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="journal">
                        <span class="oi oi-book" aria-hidden="true"></span> Günlük
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="profile">
                        <span class="bi bi-person-circle" aria-hidden="true"></span> Profil
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <button class="nav-link btn btn-link w-100 text-start" @onclick="LogoutAsync" style="border: none; background: none; padding: 0.5rem 1rem;">
                        <span class="bi bi-box-arrow-right" aria-hidden="true"></span> Çıkış Yap
                    </button>
                </div>
             </Authorized>
             <NotAuthorized>              
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="signup">
                        <span class="bi bi-person-plus" aria-hidden="true"></span> Kayıt Ol
                    </NavLink>
                </div>                  
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="login">
                        <span class="bi bi-box-arrow-in-right" aria-hidden="true"></span> Giriş Yap
                    </NavLink>
                </div>                


            </NotAuthorized>
        </AuthorizeView>

    </nav>
</div>

@code {
    private async Task LogoutAsync()
    {
        try
        {
            // Get user ID for logout service call
            var userIdString = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "userId");
            if (!string.IsNullOrEmpty(userIdString) && Guid.TryParse(userIdString, out var userId))
            {
                await AuthService.LogoutAsync(userId);
            }
        }
        catch
        {
            // If service call fails, we still proceed with local logout
        }

        // Clear local storage
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "accessToken");
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "refreshToken");
        await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "userId");

        // Notify the authentication state provider about the change
        AuthStateProvider.NotifyAuthenticationStateChanged();

        // Navigate to login page
        NavigationManager.NavigateTo("/login");
    }
}
